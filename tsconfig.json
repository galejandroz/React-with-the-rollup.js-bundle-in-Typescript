{
    "compilerOptions": {
        "target": "ES5" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "jsx": "react-jsx" /* Specify what JSX code is generated. */,
        "experimentalDecorators": true /* Enable experimental support for legacy experimental decorators. */,

        /* Modules */
        "module": "ESNext" /* Specify what module code is generated. */,
        "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "baseUrl": "src" /* Specify the base directory to resolve non-relative module names. */,
        "resolveJsonModule": true /* Enable importing .json files. */,

        /* JavaScript Support */
        "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

        /* Emit */
        "outDir": "build" /* Specify an output folder for all emitted files. */,

        /* Interop Constraints */
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
        "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
        "useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
        "alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
        "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */
    },
    "exclude": ["node_modules"]
}
